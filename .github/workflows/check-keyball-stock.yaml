name: check-keyball-stock_deploy

on:
  push:
    branches:
      - master
    paths:
      - lambda/check-keyball-stock/Dockerfile
      - lambda/check-keyball-stock/lambda_function.py
      - .github/workflows/check-keyball-stock.yaml

env:
  FUNCTION_NAME: check-keyball-stock
  URL: ${{ secrets.SHIROGANE_LAB_URL }}
  LINE_NOTIFY_TOKEN: ${{ secrets.LINE_NOTIFY_TOKEN }}
  URI: "${{ secrets.CONTAINER_REGISTRY_PATH }}/aws-utils/check-keyball-stock"
  WORKDIR: ./lambda/check-keyball-stock

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push docker image
        run: |
          docker build \
          --build-arg LINE_NOTIFY_TOKEN=${{ env.LINE_NOTIFY_TOKEN }} \
          --build-arg URL=${{ env.URL }} \
          -t ${{ env.URI }} .
          docker push ${{ env.URI }}
        working-directory: ${{ env.WORKDIR }}

      # - name: Update lambda function
      #   run: aws lambda update-function-code --function-name ${{ env.FUNCTION_NAME }} --image-uri "${{ env.URI }}:latest" > /dev/null
      #   working-directory: ${{ env.WORKDIR }}
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
